<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountName" xml:space="preserve">
    <value>账号名称</value>
  </data>
  <data name="AccountNameOrEmailAddress" xml:space="preserve">
    <value>账号名称或邮箱地址</value>
  </data>
  <data name="AccountStatus" xml:space="preserve">
    <value>账号状态</value>
  </data>
  <data name="AddAccounts" xml:space="preserve">
    <value>新建账号</value>
  </data>
  <data name="AddFeatures" xml:space="preserve">
    <value>新增功能</value>
  </data>
  <data name="AddRoles" xml:space="preserve">
    <value>新增角色</value>
  </data>
  <data name="AssignPermissions" xml:space="preserve">
    <value>分配权限</value>
  </data>
  <data name="AssignRoles" xml:space="preserve">
    <value>分配角色</value>
  </data>
  <data name="BatchDeletion" xml:space="preserve">
    <value>批量删除</value>
  </data>
  <data name="ChangeLoginPassword" xml:space="preserve">
    <value>修改登录密码</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>修改密码</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="ConfirmChoice" xml:space="preserve">
    <value>确定选择</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>确认密码</value>
  </data>
  <data name="ConfirmSubmission" xml:space="preserve">
    <value>确定提交</value>
  </data>
  <data name="Disable" xml:space="preserve">
    <value>禁用</value>
  </data>
  <data name="EditFunction" xml:space="preserve">
    <value>修改功能 - {0}</value>
  </data>
  <data name="EditRole" xml:space="preserve">
    <value>修改角色 - {0}</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>邮箱</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>邮箱地址</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>启用</value>
  </data>
  <data name="FDTip" xml:space="preserve">
    <value>将站点已实现的功能填写到系统中，这样就可以将它们分配给相关的菜单和角色，以达到不同身份的账号使用的功能也不相同的目的</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>女</value>
  </data>
  <data name="FunctionName" xml:space="preserve">
    <value>功能名称</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>性别</value>
  </data>
  <data name="IdentificationCode" xml:space="preserve">
    <value>标识码</value>
  </data>
  <data name="InformationAuthentication" xml:space="preserve">
    <value>信息认证</value>
  </data>
  <data name="ListOfExistingAccounts" xml:space="preserve">
    <value>现有账号一览</value>
  </data>
  <data name="LoginIP" xml:space="preserve">
    <value>登录IP</value>
  </data>
  <data name="LoginName" xml:space="preserve">
    <value>登录名</value>
  </data>
  <data name="LoginNameTip" xml:space="preserve">
    <value>为了您的账号安全，请填写登录名</value>
  </data>
  <data name="LoginPassword" xml:space="preserve">
    <value>登录密码</value>
  </data>
  <data name="LoginTime" xml:space="preserve">
    <value>登录时间</value>
  </data>
  <data name="LoginTimes" xml:space="preserve">
    <value>登录次数</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>男</value>
  </data>
  <data name="Modify" xml:space="preserve">
    <value>修改</value>
  </data>
  <data name="ModifyAccountInformation" xml:space="preserve">
    <value>修改账号信息</value>
  </data>
  <data name="ModifyAccountInformationTip" xml:space="preserve">
    <value>修改账号信息 - {0}</value>
  </data>
  <data name="ModifyFunction" xml:space="preserve">
    <value>修改功能</value>
  </data>
  <data name="ModifyRole" xml:space="preserve">
    <value>修改角色</value>
  </data>
  <data name="MyProfile" xml:space="preserve">
    <value>我的档案</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>姓名</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>新密码</value>
  </data>
  <data name="Operation" xml:space="preserve">
    <value>操作</value>
  </data>
  <data name="OriginalPassword" xml:space="preserve">
    <value>原密码</value>
  </data>
  <data name="PasswordTip" xml:space="preserve">
    <value>为了您的账号安全，请填写原密码</value>
  </data>
  <data name="PasswordTip1" xml:space="preserve">
    <value>忘记密码时可用该邮箱重置密码</value>
  </data>
  <data name="PasswordTip2" xml:space="preserve">
    <value>两次输入的密码不同</value>
  </data>
  <data name="PasswordTip3" xml:space="preserve">
    <value>请再次输入密码</value>
  </data>
  <data name="PersonalInformation" xml:space="preserve">
    <value>个人资料</value>
  </data>
  <data name="Photo" xml:space="preserve">
    <value>照片</value>
  </data>
  <data name="PhotoRequirements" xml:space="preserve">
    <value>照片的体积请在2M以内，高度和宽度均为190*190</value>
  </data>
  <data name="RegularRole" xml:space="preserve">
    <value>常规角色</value>
  </data>
  <data name="Remark" xml:space="preserve">
    <value>备注</value>
  </data>
  <data name="RoleName" xml:space="preserve">
    <value>角色名称</value>
  </data>
  <data name="RoleTip" xml:space="preserve">
    <value>可以为角色分配它能使用的功能，这些功能会归属于某个菜单，这样不同的角色可以访问的菜单就不一样了</value>
  </data>
  <data name="RoleType" xml:space="preserve">
    <value>角色类型</value>
  </data>
  <data name="SavedSuccessfully" xml:space="preserve">
    <value>保存成功</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="SiteFunctionList" xml:space="preserve">
    <value>站点功能列表</value>
  </data>
  <data name="SiteRoleList" xml:space="preserve">
    <value>站点角色列表</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="SuccessfulOperation" xml:space="preserve">
    <value>操作成功</value>
  </data>
  <data name="SystemRole" xml:space="preserve">
    <value>系统角色</value>
  </data>
  <data name="TelephoneNumber" xml:space="preserve">
    <value>电话号码</value>
  </data>
  <data name="UploadNoDirectory" xml:space="preserve">
    <value>没有指定文件所在的虚拟目录编号，无法完成上传操作</value>
  </data>
</root>